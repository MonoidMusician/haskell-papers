
- title: Runtime support for multicore Haskell
  year: 2009
  authors: [Simon Marlow, Simon Peyton Jones, Satnam Singh]
  links:
  - https://simonmar.github.io/bib/papers/multicore-ghc.pdf
  - http://community.haskell.org/~simonmar/papers/multicore-ghc.pdf
- title: Haskell on a shared-memory multiprocessor
  authors: [Tim Harris, Simon Marlow, Simon Peyton Jones]
  year: 2005
  links:
  - https://simonmar.github.io/bib/papers/multiproc.pdf
  - http://community.haskell.org/~simonmar/papers/multiproc.pdf
- title: Non-stop Haskell
  authors: [Andy Cheadle, Tony Field, Simon Marlow, Simon Peyton Jones, Lyndon While]
  year: 2000
  links:
  - https://simonmar.github.io/bib/papers/nonstop.pdf
  - http://community.haskell.org/~simonmar/papers/nonstop.pdf
- title: Parallel generational-copying garbage collection with a block-structured heap
  authors: [Simon Marlow, Tim Harris, Roshan P. James, Simon Peyton Jones]
  year: 2008
  links:
  - https://simonmar.github.io/bib/papers/parallel-gc.pdf
  - http://community.haskell.org/~simonmar/papers/parallel-gc.pdf
- year: 2012
  link: http://community.haskell.org/~simonmar/papers/safe-haskell.pdf
  authors: [David Terei, David Mazières, Simon Marlow, Simon Peyton Jones]
  title: Safe Haskell
- year: 2007
  link: http://strictlypositive.org/Easy.pdf
  authors: [Andres Löh, Conor McBride, Wouter Swierstra]
  title: 'Simply easy!: an implementation of a dependently typed lambda calculus'
- title: 'Henk: a typed intermediate language'
  authors: [Simon Peyton Jones, Erik Meijer]
  year: 1997
- year: 2002
  link: http://www.cs.rit.edu/~mtf/research/phantom-subtyping/jfp06/jfp06.pdf
  authors: [Matthew Fluet, Riccardo Pucella]
  title: Phantom types and subtyping
- title: Composable memory transactions
  authors: [Tim Harris, Simon Marlow, Simon Peyton Jones, Maurice Herlihy]
  year: 2006
  links:
  - https://www.microsoft.com/en-us/research/wp-content/uploads/2005/01/2005-ppopp-composable.pdf
  - https://simonmar.github.io/bib/papers/stm.pdf
- year: 2008
  link: http://www.cs.ru.nl/~W.Swierstra/Publications/DataTypesALaCarte.pdf
  author: Wouter Swierstra
  title: Data types à la carte
- year: 2013
  link: http://arxiv.org/pdf/1403.0749v3.pdf
  authors: [Paolo Capriotti, Ambrus Kaposi]
  title: Free applicative functors
- title: Trace-based just-in-time compilation for lazy functional programming languages
  author: Thomas Schilling
  year: 2014
- title: 'Stretching the storage manager: weak pointers and stable names in Haskell'
  authors: [Simon Peyton Jones, Simon Marlow, Conal Elliott]
  year: 1999
  links:
  - https://www.microsoft.com/en-us/research/wp-content/uploads/1999/09/stretching.pdf
  - https://simonmar.github.io/bib/papers/weak.pdf
- title: Orthogonal serialisation for Haskell
  author: Jost Berthold
  year: 2010
- title: 'Supero: making Haskell faster'
  authors: [Neil Mitchell, Colin Runciman]
  year: 2007
  links:
  - https://ndmitchell.com/downloads/paper-supero_making_haskell_faster-27_sep_2007.pdf
  - http://community.haskell.org/~ndm/downloads/paper-supero_making_haskell_faster-27_sep_2007.pdf
- title: Hierarchical memory management for parallel programs
  link: http://www.cs.cmu.edu/~rraghuna/publications/icfp-2016-hierarchical-memory-management-for-parallel-programs/paper.pdf
- title: Compact bit encoding schemes for simply-typed lambda-terms
- title: Fully abstract compilation via universal embedding
  link: https://dl.acm.org/citation.cfm?doid=2951913.2951941
- title: 'A history of Haskell: being lazy with class'
  link: https://www.microsoft.com/en-us/research/wp-content/uploads/2016/07/history.pdf
- title: 'SpaceSearch: a library for building and verifying solver-aided tools'
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110269
- title: Non-recursive make considered harmful
  authors: [Andrey Mokhov, Neil Mitchell, Simon Peyton Jones, Simon Marlow]
  year: 2016
  link: https://ndmitchell.com/downloads/paper-non_recursive_make_considered_harmful-22_sep_2016.pdf
- title: Type-level web APIs with servant
  link: https://dl.acm.org/authorize?N08939
- title: Tackling the testing migration problem with SAT-solvers
  link: https://arxiv.org/pdf/1204.2974.pdf
- title: Inferring scope through syntactic sugar
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110288
- title: Queueing and glueing for optimal partitioning (functional pearl)
  link: http://www.iis.sinica.edu.tw/~scm/pub/queueing-glueing.pdf
- title: 'Lazy evaluation: from natural semantics to a machine-checked compiler transformation'
  link: https://www.ksp.kit.edu/download/1000056002
- title: Generalizing monads to arrows
  link: http://www.cse.chalmers.se/~rjmh/Papers/arrows.pdf
- title: 'Implementing lazy functional languages on stock hardware: the Spineless Tagless G-machine'
  author: Simon Peyton Jones
  year: 1992
  links:
  - https://www.microsoft.com/en-us/research/wp-content/uploads/1992/04/spineless-tagless-gmachine.pdf
  - http://www.dcc.fc.up.pt/~pbv/aulas/linguagens/peytonjones92implementing.pdf
- title: Type-and-scope safe programs and their proofs
  link: https://gallais.github.io/pdf/cpp2017.pdf
- title: Visual Hat
  link: https://ndmitchell.com/downloads/paper-hatday-28_oct_2005.pdf
  year: 2005
  author: Neil Mitchell
- title: Dynamic witnesses for static type errors (or, ill-typed programs usually go wrong)
  link: https://dl.acm.org/citation.cfm?doid=2951913.2951915
- title: 'Farms, pipes, streams and reforestation: reasoning about structured parallel processes using types and hylomorphisms'
  link: https://research-repository.st-andrews.ac.uk/bitstream/handle/10023/9810/Castro_2016_Farms_ICFP2016_AAM.pdf
- title: 'Scaling up functional programming education: under the hood of the OCaml MOOC'
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110248
- title: Data flow fusion with series expressions in Haskell
  link: http://benl.ouroborus.net/papers/2013-series/flow-Haskell2013-rev1.pdf
- title: Gradual session types
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110282
- title: Automating sized-type inference for complexity analysis
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110287
- title: Deriving program coverage from Hat traces
  year: 2005
  author: Colin Runciman
  link: https://ndmitchell.com/downloads/paper-hatday-28_oct_2005.pdf
- title: Symbolic conditioning of arrays in probabilistic programs
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110255
- title: 'Communicating Haskell processes: composable explicit concurrency using monads'
  link: http://twistedsquare.com/CHP.pdf
- title: Abstracting definitional interpreters
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110256
- title: Generic programming for indexed datatypes
  link: http://dreixel.net/research/pdf/gpid.pdf
- title: Theorems for free!
  author: Philip Wadler
  year: 1989
  links:
  - https://people.mpi-sws.org/~dreyer/tor/papers/wadler.pdf
  - http://ecee.colorado.edu/ecen5533/fall11/reading/free.pdf
  - http://ttic.uchicago.edu/~dreyer/course/papers/wadler.pdf
- title: Constrained type families
  links:
  - https://arxiv.org/pdf/1706.09715.pdf
  - https://dl.acm.org/citation.cfm?doid=3136534.3110286
- title: Partial type equivalences for verified dependent interoperability
  link: https://pleiad.cl/papers/2016/dagandAl-icfp2016.pdf
- title: 'Generic functional parallel algorithms: scan and FFT'
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110251
- title: Rethinking supercompilation
  year: 2010
  author: Neil Mitchell
  link: https://ndmitchell.com/downloads/paper-rethinking_supercompilation-29_sep_2010.pdf
- title: On polymorphic gradual typing
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110284
- title: Why functional programming matters
  link: https://www.cs.kent.ac.uk/people/staff/dat/miranda/whyfp90.pdf
- title: Super 8 languages for making movies
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110274
- title: Towards Haskell in the cloud
  authors: [Jeff Epstein, Andrew P. Black, Simon Peyton Jones]
  year: 2011
  links:
  - https://www.microsoft.com/en-us/research/wp-content/uploads/2016/07/remote.pdf
  - http://research.microsoft.com/en-us/um/people/simonpj/papers/parallel/remote.pdf
- title: 'dup: explicit un-sharing in Haskell'
  link: https://arxiv.org/pdf/1207.2017.pdf
- title: Higher-order + polymorphic = reusable
  link: https://kar.kent.ac.uk/21504/3/Higher-order_+_Polymorphic_=_Reusable.pdf
- title: Parametric quantifiers for dependent type theory
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110276
- title: Staged generic programming
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110273
- title: The essence of functional programming
  link: https://page.mi.fu-berlin.de/scravy/realworldhaskell/materialien/the-essence-of-functional-programming.pdf
- title: 'Elaborator reflection: extending Idris in Idris'
  authors: [David Christiansen, Edwin Brady]
  year: 2016
  links:
  - https://eb.host.cs.st-andrews.ac.uk/drafts/elab-reflection.pdf
  - https://dl.acm.org/citation.cfm?doid=2951913.2951932
- title: Visual theorem proving with the Incredible Proof Machine
  link: https://www.microsoft.com/en-us/research/wp-content/uploads/2014/01/cardinality-popl14.pdf
- title: Uniform boilerplate and list processing
  authors: [Neil Mitchell, Colin Runciman]
  year: 2007
  link: https://ndmitchell.com/downloads/paper-uniform_boilerplate_and_list_processing-30_sep_2007.pdf
- title: Deriving a relationship from a single example
  year: 2009
  author: Neil Mitchell
  link: https://ndmitchell.com/downloads/paper-deriving_a_relationship_from_a_single_example-04_sep_2009.pdf
- title: A framework for adaptive differential privacy
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110254
- title: 'Persistence for the masses: RRB-vectors in a systems language'
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110260
- title: Disjoint intersection types
  link: http://i.cs.hku.hk/~bruno/papers/icfp2016.pdf
- title: Gradual typing with union and intersection types
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110285
- title: A supercompiler for Core Haskell
  authors: [Neil Mitchell, Colin Runciman]
  year: 2008
  link: https://ndmitchell.com/downloads/paper-a_supercompiler_for_core_haskell-01_may_2008.pdf
- title: A glimpse of Hopjs
  link: https://hal.inria.fr/hal-01350936/document
- title: Regular, shape-polymorphic, parallel arrays in Haskell
  link: http://benl.ouroborus.net/papers/2010-rarrays/repa-icfp2010.pdf
- title: 'Kami: a platform for high-level parametric hardware specification and its modular verification'
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110268
- title: Unfailing Haskell
  year: 2005
  author: Neil Mitchell
  link: https://ndmitchell.com/downloads/paper-qualifying_dissertation-30_jun_2005.pdf
- title: A specification for dependent types in Haskell
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110275
- title: 'Herbarium Racketensis: a stroll through the woods'
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110245
- title: 'Shake before building: replacing Make with Haskell'
  year: 2012
  author: Neil Mitchell
  links:
  - https://ndmitchell.com/downloads/paper-shake_before_building-10_sep_2012.pdf
  - http://community.haskell.org/~ndm/downloads/paper-shake_before_building-10_sep_2012.pdf
- title: Modular, higher-order cardinality analysis in theory and practice
  link: https://www.microsoft.com/en-us/research/wp-content/uploads/2014/01/cardinality-popl14.pdf
- title: Efficient communication and collection with compact normal forms
  references:
    - Towards Haskell in the cloud
  link: http://ezyang.com/papers/ezyang15-cnf.pdf
- title: 'Ghostbuster: a tool for simplifying and converting GADTs'
  link: http://www.cs.ox.ac.uk/people/timothy.zakian/ghostbuster.pdf
- title: 'Allocation characterizes polyvariance: a unified methodology for polyvariant control-flow analysis'
  link: https://thomas.gilray.org/pdf/allocation-polyvariance.pdf
- title: A pretty but not greedy printer
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110250
- title: A type theory for incremental computational complexity with control flow changes
  link: https://people.mpi-sws.org/~ecicek/DuCostIt.pdf
- title: Safe zero-cost coercions for Haskell
  link: https://www.microsoft.com/en-us/research/wp-content/uploads/2016/07/coercible.pdf
- title: Embedding foreign code
  link: https://github.com/AccelerateHS/acceleratehs.github.io/raw/master/papers/acc-ffi-padl2014.pdf
- title: Monads for functional programming
  author: Philip Wadler
  link: http://homepages.inf.ed.ac.uk/wadler/papers/marktoberdorf/baastad.pdf
- title: Transformation and analysis of functional programs
  year: 2008
  author: Neil Mitchell
  link: https://ndmitchell.com/downloads/paper-transformation_and_analysis_of_functional_programs-4_jun_2008.pdf
- title: Accelerating Haskell array codes with multicore GPUs
  link: https://github.com/AccelerateHS/acceleratehs.github.io/raw/master/papers/acc-cuda-damp2011.pdf
- title: A natural semantics for tracing in Haskell
  year: 2005
  author: Yong Luo
  link: https://ndmitchell.com/downloads/paper-hatday-28_oct_2005.pdf
- title: 'Unifiers as equivalences: proof-relevant unification of dependently typed data'
- title: Automatically disproving fair termination of higher-order functional programs
- title: String diagrams for free monads (functional pearl)
  link: https://lirias.kuleuven.be/bitstream/123456789/547211/1/free-strings.pdf
- title: Monad transformers and modular interpreters
  link: http://haskell.cs.yale.edu/wp-content/uploads/2011/02/POPL96-Modular-interpreters.pdf
- title: 'The two dualities of computation: negative and fractional types'
  link: https://www.cs.indiana.edu/~sabry/papers/rational.pdf
  authors: [Roshan P. James, Amr Sabry]
  year: 2012
- title: Deriving a probability density calculator
  link: https://dl.acm.org/citation.cfm?doid=2951913.2951922
- title: Prototyping a query compiler using Coq
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110253
- title: Streaming irregular arrays
  link: https://github.com/AccelerateHS/acceleratehs.github.io/raw/master/papers/acc-seq2-haskell2017.pdf
- title: Normalization by evaluation for sized dependent types
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110277
- title: The Hat G-Machine
  authors: [Tom Shackell, Colin Runciman]
  year: 2005
  link: https://ndmitchell.com/downloads/paper-hatday-28_oct_2005.pdf
- title: Using trace data to diagnose non-termination errors
  authors: [Mike Dodds, Colin Runciman]
  year: 2005
  link: https://ndmitchell.com/downloads/paper-hatday-28_oct_2005.pdf
- title: 'Losing functions without gaining data: another look at defunctionalization'
  authors: [Neil Mitchell, Colin Runciman]
  year: 2009
  link: https://ndmitchell.com/downloads/paper-losing_functions_without_gaining_data-03_sep_2009.pdf
- title: 'Stream fusion: practical shortcut fusion for coinductive sequence types'
  link: http://community.haskell.org/~duncan/thesis.pdf
- title: Manifest sharing with session types
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110281
- title: Lock-step simulation is child's play
  links:
  - https://www.joachim-breitner.de/publications/CodeWorld-ICFP17.pdf
  - https://dl.acm.org/citation.cfm?doid=3136534.3110247
- title: A metaprogramming framework for formal verification
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110278
- title: A static checker for safe pattern matching in Haskell
  authors: [Neil Mitchell, Colin Runciman]
  year: 2007
  link: https://ndmitchell.com/downloads/paper-a_static_checker_for_safe_pattern_matching_in_haskell-01_feb_2007.pdf
- title: Efficient parallel stencil convolution in Haskell
  link: http://benl.ouroborus.net/papers/2011-stencil/stencil-haskell2011.pdf
- title: Call arity
  author: Joachim Breitner
  link: https://www.joachim-breitner.de/publications/CallArity-TFP.pdf
- title: Effect-driven QuickChecking of compilers
  link: https://dl.acm.org/citation.cfm?doid=3136534.3110259
